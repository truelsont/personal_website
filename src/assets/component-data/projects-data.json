{
  "categoryColors": {
    "University": "#f0110f",
    "Personal": "#2196F3",
    "Open Source": "#FF5722"
  },
  "projects": [
    {
      "id": 1,
      "title": "Personal Portfolio",
      "description": "A Vue.js-based personal portfolio website showcasing projects and experience.",
      "detailedSummary": "The website you are currently viewing is this project. It's a modern, responsive portfolio website built with Vue.js and TypeScript. Features include dynamic project showcases, interactive timeline, and a contact form. Feel free to clone the repo and make changes to your own portfolio. I made this pretty quickly over a few days, and it isn't very complex.",
      "category": "Personal",
      "technologies": ["Vue.js", "TypeScript"],
      "priority": 1,
      "date": "2025-1-1",
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/truelsont/personal_website"
        }
      ]
    },
    {
      "id": 2,
      "title": "Simulator (Fenrir)",
      "description": "Grand Strategy simulator in java", 
      "detailedSummary": "I have always really enjoyed playing Paradox Grand Strategy games. This project is similar to them. It involves working on procedurally generated worlds and AI agent frameworks for constructive narrative generation, management of economy, military, and diplomacy. Currently being built on the libGDX game engine. Pretty ambitious, not really in a state to be showing off :).",
      "category": "Personal",
      "technologies": ["Java", "libGDX", "AI/ML"],
      "priority": 1000,
      "date": "Ongoing",
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/truelsont/Fenrir"
        }
      ]
    },
    {
      "id": 3,
      "title": "Healthcare Platform (Eir)",
      "description": "AI-powered healthcare platform for physicians and patients",
      "detailedSummary": "A comprehensive healthcare platform built with Django and FastAPI microservices. Features include patient data management, AI-assisted medical document analysis, audio transcription with medical terminology extraction, and intelligent search capabilities. The system uses advanced technologies like RAG (Retrieval Augmented Generation), vector embeddings, and medical analysis agents. Built with a modern tech stack including Python, Docker, PostgreSQL, MongoDB, and Qdrant for vector search.",
      "category": "Personal",
      "technologies": ["Python", "Django", "FastAPI", "Docker", "AI/ML"],
      "priority": 1001,
      "date": "Ongoing",
      "links": [
        {
          "label": "GitHub",
          "url": "https://github.com/truelsont/Eir"
        }
      ]
    },
    {
      "id": 4,
      "title": "Scotty3D Graphics Engine",
      "description": "3D modeling, rendering, and animation package built at CMU",
      "detailedSummary": "A comprehensive 3D graphics engine developed as part of CMU's Computer Graphics course. I implemented core graphics features including mesh editing, subdivision, ray tracing, path tracing, and skeletal animation. The project involved building a complete graphics pipeline from scratch using C++ and OpenGL, covering fundamental concepts like geometry processing, physically-based rendering, and inverse kinematics. I am not allowed to share my solution, but linked is the course page.",
      "category": "University",
      "technologies": ["C++", "OpenGL", "Computer Graphics"],
      "priority": 4,
      "date": "Spring 2023",
      "links": [
        {
          "label": "Course",
          "url": "http://15462.courses.cs.cmu.edu/spring2023/"
        }
      ]
    },
    {
      "id": 5,
      "title": "Needle Deep Learning Framework",
      "description": "Mini deep learning framework with dynamic computational graphs",
      "detailedSummary": "I implemented a deep learning framework from scratch at CMU, featuring dynamic computational graphs, automatic differentiation, and hardware acceleration. Built with modular architecture supporting CPU/GPU backends. Includes implementations of classic models like MLP-ResNet, ResNet9, and RNN/LSTM, tested on datasets including MNIST, CIFAR-10, and Penn Treebank. Features lazy evaluation, flexible tensor operations, and a PyTorch-like programming model. I concluded the course with a research project into integrating Fourier transforms into convolutional networks for algorithmic speedup. I am not allowed to share my solution, but linked is the course page.",
      "category": "University",
      "technologies": ["Python", "C++", "CUDA", "Deep Learning"],
      "priority": 3,
      "date": "Fall 2023",
      "links": [
        {
          "label": "Course",
          "url": "https://dlsyscourse.org/"
        }
      ]
    },
    {
      "id": 6,
      "title": "Advanced Search Engine",
      "description": "Large-scale distributed search engine with neural ranking",
      "detailedSummary": "I built a comprehensive search engine as part of CMU's Search Engines course. I implemented core components such as boolean matching, DAAT query processing, BM25 ranking, and neural reranking with BERT, evaluated on industry-standard TREC datasets. The project emphasized large-scale architecture and ranking algorithms, written in Python on top of Apache Lucene. I am not allowed to share my solution, but linked is the course page.",
      "category": "University",
      "technologies": ["Python", "BM-25", "BERT", "Lucene"],
      "priority": 2,
      "date": "Spring 2024",
      "links": [
        {
          "label": "Course",
          "url": "https://boston.lti.cs.cmu.edu/classes/11-642/"
        }
      ]
    }
  ]
}
